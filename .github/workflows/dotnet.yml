# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Create version number
      id: version
      run: echo "v=$(date +'%Y.%m%d.${{github.run_number}}')" >> $GITHUB_OUTPUT

    - name: Publish linux-x64
      run: dotnet publish EliteSx2Mqtt/EliteSx2Mqtt.csproj -r linux-x64 --self-contained true -p:PublishSingleFile=true -p:Version=${{steps.version.outputs.v}} -c Release -o ${{env.DOTNET_ROOT}}/linux-x64

    - name: Create Deb Package
      run: |
        sed -i 's/0.0.0/${{steps.version.outputs.v}}/g' EliteSx2Mqtt/DEBIAN/control
        ROOTDIR=elitesx2mqtt_${{steps.version.outputs.v}}_amd64
        mkdir -p $ROOTDIR/opt/bin/elitesx2mqtt
        cp -r ${{env.DOTNET_ROOT}}/linux-x64/* $ROOTDIR/opt/bin/elitesx2mqtt/
        cp -r EliteSx2Mqtt/DEBIAN $ROOTDIR/
        dpkg-deb --build --root-owner-group $ROOTDIR

    - name: Upload as zip
      uses: actions/upload-artifact@v3
      with:
        name: linux-x64-${{steps.version.outputs.v}}
        path: ${{env.DOTNET_ROOT}}/linux-x64

    - name: Upload .deb
      uses: actions/upload-artifact@v3
      with:
        name: linux-x64-${{steps.version.outputs.v}}.deb
        path: "*.deb"
        
